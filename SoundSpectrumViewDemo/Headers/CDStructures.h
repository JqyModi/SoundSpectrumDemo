//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AEBufferStack;

struct AgoraMediaMetadataObserver;

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamStateObserver {
    CDUnknownFunctionPointerType *_field1;
    struct Audio_Stream *_field2;
    id _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct Audio_Queue;

struct Audio_Stream {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct Audio_Stream_Delegate *_field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    int _field14;
    struct Input_Stream *_field15;
    struct Audio_Queue *_field16;
    struct __CFRunLoopTimer *_field17;
    struct __CFRunLoopTimer *_field18;
    struct __CFRunLoopTimer *_field19;
    struct __CFRunLoopTimer *_field20;
    struct __CFRunLoopTimer *_field21;
    struct OpaqueAudioFileStreamID *_field22;
    struct OpaqueAudioConverter *_field23;
    struct AudioStreamBasicDescription _field24;
    struct AudioStreamBasicDescription _field25;
    int _field26;
    unsigned int _field27;
    char *_field28;
    unsigned long long _field29;
    unsigned long long _field30;
    unsigned long long _field31;
    float _field32;
    unsigned long long _field33;
    double _field34;
    _Bool _field35;
    struct __CFString *_field36;
    struct __CFString *_field37;
    struct File_Output *_field38;
    struct __CFURL *_field39;
    struct queued_packet *_field40;
    struct queued_packet *_field41;
    struct queued_packet *_field42;
    struct list<astreamer::queued_packet *, std::__1::allocator<astreamer::queued_packet *>> _field43;
    unsigned int _field44;
    unsigned long long _field45;
    unsigned long long _field46;
    unsigned long long _field47;
    unsigned int _field48;
    unsigned int _field49;
    double _field50;
    double _field51[50];
    unsigned long long _field52;
    float _field53;
    _Bool _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    struct _opaque_pthread_mutex_t _field58;
    struct _opaque_pthread_mutex_t _field59;
    struct _opaque_pthread_t *_field60;
    struct __CFRunLoop *_field61;
    struct __CFRunLoop *_field62;
};

struct Audio_Stream_Delegate;

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CNQueueCall {
    struct __CFRunLoop *_field1;
    struct __CFRunLoopSource *_field2;
    struct __CFString *_field3;
    struct queue<CNCallBackTask *, std::__1::deque<CNCallBackTask *, std::__1::allocator<CNCallBackTask *>>> *_field4;
    struct Lock _field5;
    int _field6;
    id _field7;
    int _field8;
};

struct CNSecurityGuardWrapperImpl {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct CNURLConnectionCore {
    CDUnknownFunctionPointerType *_field1;
    struct CNURLConnectionCoreImp *_field2;
};

struct CNURLConnectionCoreImp;

struct CNUpaasManagerCore {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    struct SecurityGuardWrapper *_field7;
};

struct Cache;

struct CacheItem;

struct ChannelEventHandlerIosImpl {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
};

struct CipherDatabase {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    basic_string_7c0a1c0b _field3;
    _Bool _field4;
    int _field5;
};

struct CipherError {
    int _field1;
    basic_string_7c0a1c0b _field2;
};

struct CipherStatement {
    struct sqlite3 *_field1;
    struct sqlite3_stmt *_field2;
    int _field3;
    struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field4;
};

struct Comparator;

struct DB {
    CDUnknownFunctionPointerType *_field1;
};

struct DBConfig {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
    unsigned short _field4;
    struct function<void (const std::__1::shared_ptr<AliDatabase::DBConnection>&, int, int)> _field5;
    struct function<void (const std::__1::shared_ptr<AliDatabase::DBConnection>&)> _field6;
    struct SQLTrace *_field7;
    struct function<void ()> _field8;
};

struct DBConnection;

struct DBConnectionPool;

struct Database {
    struct DBConfig _field1;
    struct DBConnectionPool *_field2;
    struct recursive_mutex _field3;
};

struct Env;

struct Error {
    int _field1;
    int _field2;
    int _field3;
    basic_string_7c0a1c0b _field4;
};

struct File_Output;

struct FilterPolicy;

struct IChannel {
    CDUnknownFunctionPointerType *_field1;
};

struct ILocalCallInvitation {
    CDUnknownFunctionPointerType *_field1;
};

struct IRemoteCallInvitation {
    CDUnknownFunctionPointerType *_field1;
};

struct IRtcEngineEventHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct IRtcEngineEx {
    CDUnknownFunctionPointerType *_field1;
};

struct IRtmCallManager {
    CDUnknownFunctionPointerType *_field1;
};

struct IRtmService {
    CDUnknownFunctionPointerType *_field1;
};

struct Input_Stream;

struct JDYBinaryImageTextSegmentRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct KSJSONDecodeCallbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LiteVM {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
};

struct LiteVMContext {
    int _field1;
    struct _opaque_pthread_t *_field2;
    struct CacheItem *_field3;
    unsigned long long _field4;
    void *_field5;
    void *_field6;
    unsigned int _field7;
    struct Registers _field8;
};

struct Lock {
    struct LockImpl _field1;
};

struct LockImpl {
    struct _opaque_pthread_mutex_t _field1;
};

struct Logger;

struct NAL_addr_t {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    CDUnion_7059b8d6 _field5;
    CDUnion_7059b8d6 _field6;
    unsigned int _field7;
};

struct NAL_connection_count_t {
    unsigned long long _field1;
    unsigned long long _field2;
    int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
    unsigned long long _field9;
    int _field10;
};

struct NAL_data {
    char *_field1;
    unsigned long long _field2;
    _Bool _field3;
};

struct NAL_option {
    int *_field1;
    char *_field2;
    int _field3;
};

struct NAL_request_count_t {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
};

struct NAL_request_handler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct NAL_request_meta {
    struct NAL_request_handler _field1;
    void *_field2;
};

struct NAL_request_t {
    unsigned char _field1;
    int _field2;
    struct NAL_option _field3;
    char **_field4;
    char *_field5;
    struct NAL_data _field6;
    struct NAL_request_meta _field7;
    int _field8;
    int _field9;
};

struct NAL_session_handler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
};

struct NAL_session_meta {
    void *_field1;
    struct NAL_session_handler _field2;
    unsigned int :1;
};

struct NFRegion {
    unsigned long long top;
    unsigned long long bottom;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct OSSCancellationTokenSource {
    Class _field1;
};

struct OpaqueAudioConverter;

struct OpaqueAudioFileStreamID;

struct Options {
    struct Comparator *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    struct Env *_field5;
    struct Logger *_field6;
    unsigned long long _field7;
    int _field8;
    struct Cache *_field9;
    unsigned long long _field10;
    int _field11;
    int _field12;
    struct FilterPolicy *_field13;
};

struct POPAnimatorItem;

struct PreparedStatement;

struct ReadOptions {
    _Bool verify_checksums;
    _Bool fill_cache;
    struct Snapshot *snapshot;
};

struct Registers {
    unsigned long long _field1[32];
};

struct Result;

struct ResultSet;

struct RtcImage {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct RtmCallEventHandlerIosImpl {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct RtmServiceEventHandlerIosImpl {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct SGKeyInfoStruct {
    unsigned long long _field1;
    struct SGKeySeqNoPair _field2;
    struct SGKeySeqNoPair _field3;
};

struct SGKeySeqNoPair {
    unsigned char _field1[2];
    id _field2;
};

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SQLTrace;

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SecurityGuardWrapper;

struct Snapshot;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct UCSignalSlot {
    id _field1;
    struct map<SEL *, UCSignalSlot::SlotListItem *, std::__1::less<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, UCSignalSlot::SlotListItem *>>> _field2;
    struct list<UCSignalSlot::Signal *, std::__1::allocator<UCSignalSlot::Signal *>> _field3;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIView {
    Class _field1;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VideoCapturerIOS {
    CDUnknownFunctionPointerType *_field1;
    struct VideoSinkInterface<agora::VideoFrame> *_field2;
    id _field3;
    struct mutex _field4;
};

struct VideoSinkInterface<agora::VideoFrame>;

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct WriteOptions {
    _Bool sync;
};

struct _AccsSDKOperationTypeSF {
    long long accsSDKOperationTypeSuccess;
    long long accsSDKOperationTypeFail;
};

struct _FileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _HashMap {
    CDStruct_183601bc **_field1;
    int _field2;
    struct array_list_t *_field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _RNCryptorKeyDerivationSettings {
    unsigned long long keySize;
    unsigned long long saltSize;
    unsigned int PBKDFAlgorithm;
    unsigned int PRF;
    unsigned int rounds;
    _Bool hasV2Password;
};

struct _RNCryptorSettings {
    unsigned int algorithm;
    unsigned long long blockSize;
    unsigned long long IVSize;
    unsigned int options;
    unsigned int HMACAlgorithm;
    unsigned long long HMACLength;
    struct _RNCryptorKeyDerivationSettings keySettings;
    struct _RNCryptorKeyDerivationSettings HMACKeySettings;
};

struct __CFRunLoop;

struct __CFRunLoopTimer;

struct __CFString;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

struct __list_node_base<NSObject<CNNetworkEventObserver>*, void *> {
    struct __list_node_base<NSObject<CNNetworkEventObserver>*, void *> *__prev_;
    struct __list_node_base<NSObject<CNNetworkEventObserver>*, void *> *__next_;
};

struct __list_node_base<NSObject<CNRmbMessageCallback>*, void *> {
    struct __list_node_base<NSObject<CNRmbMessageCallback>*, void *> *__prev_;
    struct __list_node_base<NSObject<CNRmbMessageCallback>*, void *> *__next_;
};

struct __list_node_base<ThreadConnection *, void *> {
    struct __list_node_base<ThreadConnection *, void *> *__prev_;
    struct __list_node_base<ThreadConnection *, void *> *__next_;
};

struct __list_node_base<UCSignalSlot::Signal *, void *> {
    struct __list_node_base<UCSignalSlot::Signal *, void *> *_field1;
    struct __list_node_base<UCSignalSlot::Signal *, void *> *_field2;
};

struct __list_node_base<astreamer::queued_packet *, void *> {
    struct __list_node_base<astreamer::queued_packet *, void *> *_field1;
    struct __list_node_base<astreamer::queued_packet *, void *> *_field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _opaque_pthread_t;

struct _vm_param {
    int _field1;
    union {
        int _field1;
        unsigned char _field2;
        int _field3;
        long long _field4;
        float _field5;
        double _field6;
        char *_field7;
        struct _byte_data {
            char *_field1;
            int _field2;
            int _field3;
        } _field8;
    } _field2;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct array_list_t;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct function<void ()> {
    struct type _field1;
    struct __base<void ()> *_field2;
};

struct function<void (const std::__1::shared_ptr<AliDatabase::DBConnection>&)> {
    struct type _field1;
    struct __base<void (const std::__1::shared_ptr<AliDatabase::DBConnection>&)> *_field2;
};

struct function<void (const std::__1::shared_ptr<AliDatabase::DBConnection>&, int, int)> {
    struct type _field1;
    struct __base<void (const std::__1::shared_ptr<AliDatabase::DBConnection>&, int, int)> *_field2;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<NSObject<CNNetworkEventObserver>*, std::__1::allocator<NSObject<CNNetworkEventObserver>*>> {
    struct __list_node_base<NSObject<CNNetworkEventObserver>*, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<NSObject<CNNetworkEventObserver>*, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<NSObject<CNRmbMessageCallback>*, std::__1::allocator<NSObject<CNRmbMessageCallback>*>> {
    struct __list_node_base<NSObject<CNRmbMessageCallback>*, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<NSObject<CNRmbMessageCallback>*, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<ThreadConnection *, std::__1::allocator<ThreadConnection *>> {
    struct __list_node_base<ThreadConnection *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<ThreadConnection *, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<UCSignalSlot::Signal *, std::__1::allocator<UCSignalSlot::Signal *>> {
    struct __list_node_base<UCSignalSlot::Signal *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<UCSignalSlot::Signal *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<astreamer::queued_packet *, std::__1::allocator<astreamer::queued_packet *>> {
    struct __list_node_base<astreamer::queued_packet *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<astreamer::queued_packet *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct mach_header {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct map<SEL *, UCSignalSlot::SlotListItem *, std::__1::less<SEL *>, std::__1::allocator<std::__1::pair<SEL *const, UCSignalSlot::SlotListItem *>>> {
    struct __tree<std::__1::__value_type<SEL *, UCSignalSlot::SlotListItem *>, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, UCSignalSlot::SlotListItem *>, std::__1::less<SEL *>, true>, std::__1::allocator<std::__1::__value_type<SEL *, UCSignalSlot::SlotListItem *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<SEL *, UCSignalSlot::SlotListItem *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<SEL *, std::__1::__value_type<SEL *, UCSignalSlot::SlotListItem *>, std::__1::less<SEL *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct queue<CNCallBackTask *, std::__1::deque<CNCallBackTask *, std::__1::allocator<CNCallBackTask *>>>;

struct queued_packet;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct shared_ptr<AliDatabase::DBConnection> {
    struct DBConnection *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<AliDatabase::PreparedStatement> {
    struct PreparedStatement *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<AliDatabase::Result> {
    struct Result *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<AliDatabase::ResultSet> {
    struct ResultSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sqlite3;

struct sqlite3_stmt;

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
    long long tm_gmtoff;
    char *tm_zone;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<agora::rtc::ios::AgoraMediaMetadataObserver, std::__1::default_delete<agora::rtc::ios::AgoraMediaMetadataObserver>> {
    struct __compressed_pair<agora::rtc::ios::AgoraMediaMetadataObserver *, std::__1::default_delete<agora::rtc::ios::AgoraMediaMetadataObserver>> {
        struct AgoraMediaMetadataObserver *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>;

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<id<ThemeDataChangeDelegate>, std::__1::allocator<id<ThemeDataChangeDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<id<ThemeDataChangeDelegate>*, std::__1::allocator<id<ThemeDataChangeDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>, std::__1::allocator<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>>> {
    struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>> *_field1;
    struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>> *_field2;
    struct __compressed_pair<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>*, std::__1::allocator<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>>> {
        struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct NAL_addr_t _field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct NAL_session_meta _field5;
    char *_field6;
} NAL_session_t_b975b184;

typedef struct {
    struct NAL_addr_t _field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct NAL_session_meta _field5;
} NAL_session_t_e4d01b93;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
} CDStruct_4b98f6ae;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    float _field3;
    float _field4;
} CDStruct_16540d33;

typedef struct {
    unsigned long long start;
    unsigned long long end;
    float position;
} CDStruct_904183bb;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned int ctx[96];
} CDStruct_43cfb2c2;

typedef struct {
    char *_field1;
    char *_field2;
} CDStruct_91a0c811;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    void *opaque1;
    long long opaque2;
} CDStruct_7d855afc;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct CDStruct_183601bc;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    int _field2;
    CDStruct_183601bc *_field3[0];
} CDStruct_6a6307c4;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

// Template types
typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_0886b999;

typedef struct map<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_2bed3f42;

typedef struct shared_ptr<AliDatabase::PreparedStatement> {
    struct PreparedStatement *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9fac14a9;

typedef struct shared_ptr<AliDatabase::Result> {
    struct Result *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0c4847e9;

typedef struct shared_ptr<AliDatabase::ResultSet> {
    struct ResultSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9f97566c;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct vector<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>, std::__1::allocator<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>>> {
    struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>> *_field1;
    struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>> *_field2;
    struct __compressed_pair<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>*, std::__1::allocator<std::__1::unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>>>> {
        struct unordered_map<int, AliDatabase::Value, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AliDatabase::Value>>> *_field1;
    } _field3;
} vector_1ad84577;

#pragma mark Typedef'd Unions

typedef union {
    unsigned int _field1;
    unsigned char _field2[16];
    char *_field3;
} CDUnion_7059b8d6;

