//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSURLSessionDelegate-Protocol.h"

@class NSDictionary, NSError, NSMutableData, NSMutableDictionary, NSString, NSURL, NSURLSession, NSURLSessionTask;

@interface OPCWebApiUrlSession : NSObject <NSURLSessionDelegate>
{
    float _timeoutSeconds;
    unsigned long long _sessionMethod;
    unsigned long long _encodingType;
    unsigned long long _encryptionType;
    unsigned long long _compressionType;
    NSString *_URL;
    id _body;
    unsigned long long _state;
    long long _currentTryNum;
    long long _retryCount;
    NSDictionary *_userInfo;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _beginRetryBlock;
    NSMutableDictionary *_dictHeaderFields;
    NSURLSession *_urlSession;
    NSURLSessionTask *_task;
    NSMutableData *_responseData;
    NSError *_error;
}

@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(nonatomic) __weak NSURLSessionTask *task; // @synthesize task=_task;
@property(retain, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property(retain, nonatomic) NSMutableDictionary *dictHeaderFields; // @synthesize dictHeaderFields=_dictHeaderFields;
@property(copy, nonatomic) CDUnknownBlockType beginRetryBlock; // @synthesize beginRetryBlock=_beginRetryBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) float timeoutSeconds; // @synthesize timeoutSeconds=_timeoutSeconds;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) long long currentTryNum; // @synthesize currentTryNum=_currentTryNum;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *URL; // @synthesize URL=_URL;
@property(nonatomic) unsigned long long compressionType; // @synthesize compressionType=_compressionType;
@property(nonatomic) unsigned long long encryptionType; // @synthesize encryptionType=_encryptionType;
@property(nonatomic) unsigned long long encodingType; // @synthesize encodingType=_encodingType;
@property(nonatomic) unsigned long long sessionMethod; // @synthesize sessionMethod=_sessionMethod;
- (void).cxx_destruct;
- (void)notifyDelegateRequestFailedWithError:(id)arg1 data:(id)arg2;
- (void)dispatchRequestFailedWithError:(id)arg1 data:(id)arg2;
- (void)notifyRequestFailedWithError:(id)arg1 data:(id)arg2;
- (void)notifyDelegateRequestSucceedWithData:(id)arg1;
- (void)dispatchRequestSucceedWithData:(id)arg1;
- (void)notifyRequestSucceedWithData:(id)arg1;
- (id)parseResponseData:(id)arg1 withResponseHeaders:(id)arg2;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)requestBodyData;
- (void)startRequest:(id)arg1;
- (id)httpMethod;
- (id)cyHeaders;
- (id)signUrl:(id)arg1 withCYHeaders:(id)arg2 withBodyData:(id)arg3;
- (_Bool)makeNormalRequest;
- (void)notifyDelegateRequestRetryWithError:(id)arg1;
- (void)retryTask;
- (void)cancelTask;
- (_Bool)startTask;
- (void)setHttpHeader:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly, copy, nonatomic) NSURL *requestURL;
- (_Bool)isRunning;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

