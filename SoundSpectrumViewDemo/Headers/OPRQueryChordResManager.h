//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableDictionary, OPRBaseService, OPRChordResInstrumentLists, ObserverContainer;

@interface OPRQueryChordResManager : NSObject
{
    _Bool _didQueryChordResConfigFromServer;
    _Bool _isHardCodeInstrumentList;
    ObserverContainer *_observerContainer;
    OPRBaseService *_queryChordResService;
    OPRChordResInstrumentLists *_instrumentLists;
    NSArray *_currentInstrumentListForTags;
    NSArray *_currentBeatInstrumentListForTags;
    OPRChordResInstrumentLists *_hardCodeInstrumentList;
    NSMutableDictionary *_defaultHardCodeChordInstrumentDict;
    NSMutableDictionary *_defaultHardCodeBeatInstrumentDict;
}

+ (void)statInstrumentDownload:(_Bool)arg1 beginTs:(double)arg2 filePath:(id)arg3 playStyleId:(id)arg4 errorCode:(long long)arg5;
+ (void)statInstrumentUnzip:(_Bool)arg1 playStyleId:(id)arg2;
+ (_Bool)unZipFile:(id)arg1 password:(id)arg2 toPath:(id)arg3;
+ (void)unZipDownloadedResIfNeed;
+ (id)resDataUnZipFileDirectoryPathWithMakeDir:(_Bool)arg1;
+ (id)resDataUnZipFilePath:(id)arg1 ensureDir:(_Bool)arg2;
+ (id)resDataZipFileDirectoryPathWithMakeDir:(_Bool)arg1;
+ (id)resDataZipFilePath:(id)arg1 ensureDir:(_Bool)arg2;
+ (id)resDataFilePath:(id)arg1 ensureDir:(_Bool)arg2;
+ (void)cacheChordInsrumentLists:(id)arg1;
+ (id)localChordResInsrumentLists;
+ (id)hardCodeChordResInsrumentLists;
+ (id)userId;
+ (id)instrumentDidShowGuideKeyForStore:(id)arg1;
+ (void)clearDidShowInstrumentGuide:(id)arg1;
+ (void)didShowInstrumentGuide:(id)arg1;
+ (_Bool)shouldShowInstrumentGuide:(id)arg1;
+ (_Bool)unlockWithInstrumentSubItem:(id)arg1;
+ (_Bool)needUnlockWithInstrumentSubItem:(id)arg1;
+ (id)instrumentSubItemDidUnlockKeyForStore:(id)arg1;
+ (_Bool)unlockWithInstrumentItem:(id)arg1;
+ (_Bool)needUnlockWithInstrumentItem:(id)arg1;
+ (id)instrumentItemDidUnlockKeyForStore:(id)arg1;
+ (_Bool)didShareInstrument;
+ (_Bool)needShareInstrument;
+ (id)instrumentDidShareKeyForStore;
+ (void)cleanAllRes;
+ (long long)fileSizeAtPath:(id)arg1;
+ (long long)folderSizeAtPath:(id)arg1;
+ (long long)allResSize;
+ (_Bool)isHardCodeRes:(id)arg1;
+ (id)resFileDirectoryPath:(id)arg1;
+ (id)cachedSelectedPlayStyleItemWithInstrumentItemId:(id)arg1 withInstrumentSubItemId:(id)arg2 withInstrumentList:(id)arg3 withScene:(unsigned long long)arg4;
+ (id)cachedSelectedPlayStyleItemWithScene:(unsigned long long)arg1;
+ (void)cacheSelectedPlayStyle:(id)arg1 withScene:(unsigned long long)arg2;
+ (void)resetCachedPlayStyleWithScene:(unsigned long long)arg1;
+ (id)cachedSelectedPlayStyleItemKeyForStoreWithInstrumentItem:(id)arg1 withInstrumentSubItemId:(id)arg2 withScene:(unsigned long long)arg3;
+ (id)cachedSelectedPlayStyleItemKeyForStoreWithInstrumentItem:(id)arg1 withScene:(unsigned long long)arg2;
+ (id)cachedSelectedPlayStyleItemKeyForStoreWithScene:(unsigned long long)arg1;
+ (void)downloadPlayStyleItem:(id)arg1;
+ (void)downloadInstrumentSubItem:(id)arg1;
+ (void)downloadInstrumentItem:(id)arg1;
+ (void)autoDownloadResIfNeed:(id)arg1;
+ (_Bool)playStyleItemResIsDownloading:(id)arg1;
+ (unsigned long long)playStyleItemIsDownloading:(id)arg1;
+ (_Bool)playStyleItemResDidFinishDownload:(id)arg1;
+ (unsigned long long)playStyleItemDidFinishDownload:(id)arg1;
+ (unsigned long long)resShowStateWithResState:(unsigned long long)arg1 isEnsemble:(_Bool)arg2;
+ (unsigned long long)resStateWithPlayStyleItem:(id)arg1;
+ (unsigned long long)resStateWithInstrumentSubItem:(id)arg1;
+ (unsigned long long)resStateWithInstrumentItem:(id)arg1;
+ (id)cachedLastQueryChordResConfigFromServerTSKeyForStore;
+ (void)cacheLastQueryChordResConfigFromServerTS;
+ (double)lastQueryChordResConfigFromServerTS;
+ (id)defaultInstrumentItemWithList:(id)arg1 withScene:(unsigned long long)arg2;
+ (id)instrumentItemWithItemId:(id)arg1 withInstrumentList:(id)arg2;
+ (id)instrumentList:(id)arg1 withScene:(unsigned long long)arg2;
+ (id)shareManager;
@property(retain, nonatomic) NSMutableDictionary *defaultHardCodeBeatInstrumentDict; // @synthesize defaultHardCodeBeatInstrumentDict=_defaultHardCodeBeatInstrumentDict;
@property(retain, nonatomic) NSMutableDictionary *defaultHardCodeChordInstrumentDict; // @synthesize defaultHardCodeChordInstrumentDict=_defaultHardCodeChordInstrumentDict;
@property(retain, nonatomic) OPRChordResInstrumentLists *hardCodeInstrumentList; // @synthesize hardCodeInstrumentList=_hardCodeInstrumentList;
@property(retain, nonatomic) NSArray *currentBeatInstrumentListForTags; // @synthesize currentBeatInstrumentListForTags=_currentBeatInstrumentListForTags;
@property(retain, nonatomic) NSArray *currentInstrumentListForTags; // @synthesize currentInstrumentListForTags=_currentInstrumentListForTags;
@property(nonatomic) _Bool isHardCodeInstrumentList; // @synthesize isHardCodeInstrumentList=_isHardCodeInstrumentList;
@property(nonatomic) _Bool didQueryChordResConfigFromServer; // @synthesize didQueryChordResConfigFromServer=_didQueryChordResConfigFromServer;
@property(retain, nonatomic) OPRChordResInstrumentLists *instrumentLists; // @synthesize instrumentLists=_instrumentLists;
@property(retain, nonatomic) OPRBaseService *queryChordResService; // @synthesize queryChordResService=_queryChordResService;
@property(retain, nonatomic) ObserverContainer *observerContainer; // @synthesize observerContainer=_observerContainer;
- (void).cxx_destruct;
- (void)checkNewItemWithInstrumentItems:(id)arg1 withCurrentList:(id)arg2;
- (id)defaultBeatInstrumentItemWithScene:(unsigned long long)arg1;
- (id)defaultChordInstrumentItemWithScene:(unsigned long long)arg1;
- (id)instrumentItemForTagWithItemId:(id)arg1;
- (_Bool)shouldHighlightActiveChordKey;
- (_Bool)shouldShowMessyBPMToast;
- (_Bool)shouldShowChordVideoGuide;
- (id)beatSpectrumList;
- (id)beatInstrumentListWithScene:(unsigned long long)arg1;
- (id)chordInstrumentListWithScene:(unsigned long long)arg1;
- (void)queryChordResConfigFromServer;
- (void)queryChordResConfigFromServerIfNeed;
- (void)doNotifyPlayStyleItemDidFinishDownloading:(id)arg1;
- (void)doNotifyPlayStyleItemBeginDownloading:(id)arg1;
- (_Bool)removeObserver:(id)arg1;
- (_Bool)addObserver:(id)arg1;
- (void)initInstrumentLists;
- (id)init;

@end

