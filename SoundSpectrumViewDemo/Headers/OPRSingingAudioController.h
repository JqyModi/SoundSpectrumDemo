//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AEAudioUnitInputModule, AEAudioUnitOutput, AEManagedValue, AEMixerModule, AERenderer, NSArray, NSNumber, NSString;

@interface OPRSingingAudioController : NSObject
{
    _Bool _recording;
    _Bool _inputEnabled;
    _Bool _enableRecordEffect;
    _Bool _disableAutomaticVolumeChange;
    _Bool _needNoiseReduction;
    _Bool _playingThroughSpeaker;
    _Bool _lowVersionDeivce;
    _Bool _isStop;
    NSString *_recordingPath;
    NSNumber *_playNoteVolume;
    double _micBeginRecordOffset;
    AEAudioUnitInputModule *_input;
    AEAudioUnitOutput *_output;
    AEMixerModule *_mixer;
    AEMixerModule *_mixerNotForRecord;
    AEManagedValue *_micRecorderValue;
    AEManagedValue *_audioRecorderValue;
    AEManagedValue *_mixerRecorderValue;
    id _routeChangeObserverToken;
    id _audioInterruptionObserverToken;
    NSArray *_recordEqEffect;
    NSString *_micRecordingPath;
    NSString *_mixerRecordingPath;
    AEManagedValue *_varispeedValue;
    AERenderer *_subrenderer;
}

+ (id)shareInstance;
@property(nonatomic) _Bool isStop; // @synthesize isStop=_isStop;
@property(retain, nonatomic) AERenderer *subrenderer; // @synthesize subrenderer=_subrenderer;
@property(retain, nonatomic) AEManagedValue *varispeedValue; // @synthesize varispeedValue=_varispeedValue;
@property(copy, nonatomic) NSString *mixerRecordingPath; // @synthesize mixerRecordingPath=_mixerRecordingPath;
@property(copy, nonatomic) NSString *micRecordingPath; // @synthesize micRecordingPath=_micRecordingPath;
@property(nonatomic) _Bool lowVersionDeivce; // @synthesize lowVersionDeivce=_lowVersionDeivce;
@property(retain, nonatomic) NSArray *recordEqEffect; // @synthesize recordEqEffect=_recordEqEffect;
@property(retain, nonatomic) id audioInterruptionObserverToken; // @synthesize audioInterruptionObserverToken=_audioInterruptionObserverToken;
@property(retain, nonatomic) id routeChangeObserverToken; // @synthesize routeChangeObserverToken=_routeChangeObserverToken;
@property(nonatomic) _Bool playingThroughSpeaker; // @synthesize playingThroughSpeaker=_playingThroughSpeaker;
@property(retain, nonatomic) AEManagedValue *mixerRecorderValue; // @synthesize mixerRecorderValue=_mixerRecorderValue;
@property(retain, nonatomic) AEManagedValue *audioRecorderValue; // @synthesize audioRecorderValue=_audioRecorderValue;
@property(retain, nonatomic) AEManagedValue *micRecorderValue; // @synthesize micRecorderValue=_micRecorderValue;
@property(retain, nonatomic) AEMixerModule *mixerNotForRecord; // @synthesize mixerNotForRecord=_mixerNotForRecord;
@property(retain, nonatomic) AEMixerModule *mixer; // @synthesize mixer=_mixer;
@property(retain, nonatomic) AEAudioUnitOutput *output; // @synthesize output=_output;
@property(retain, nonatomic) AEAudioUnitInputModule *input; // @synthesize input=_input;
@property(nonatomic) double micBeginRecordOffset; // @synthesize micBeginRecordOffset=_micBeginRecordOffset;
@property(nonatomic) _Bool needNoiseReduction; // @synthesize needNoiseReduction=_needNoiseReduction;
@property(retain, nonatomic) NSNumber *playNoteVolume; // @synthesize playNoteVolume=_playNoteVolume;
@property(nonatomic) _Bool disableAutomaticVolumeChange; // @synthesize disableAutomaticVolumeChange=_disableAutomaticVolumeChange;
@property(nonatomic) _Bool enableRecordEffect; // @synthesize enableRecordEffect=_enableRecordEffect;
@property(nonatomic) _Bool inputEnabled; // @synthesize inputEnabled=_inputEnabled;
@property(copy, nonatomic) NSString *recordingPath; // @synthesize recordingPath=_recordingPath;
@property(nonatomic) _Bool recording; // @synthesize recording=_recording;
- (void).cxx_destruct;
- (void)unregisterObservers;
- (void)registerObservers;
- (_Bool)setAudioSessionCategory:(id *)arg1;
- (void)updatePlayingThroughSpeaker;
- (id)audioEffectGuitarEqWithRender:(id)arg1;
- (void)callbackBlockWithMicRecord:(id)arg1 withAudioRecord:(id)arg2 withMidRecord:(id)arg3 withDuration:(id)arg4 afterFileSave:(CDUnknownBlockType)arg5;
- (void)stopRecordingAtTime:(unsigned long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)beginRecordingAtTime:(unsigned long long)arg1 error:(id *)arg2;
- (id)playAudioWithFilePath:(id)arg1 loop:(_Bool)arg2 forRecord:(_Bool)arg3 volume:(float)arg4 delay:(double)arg5 duration:(double)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (id)playAudioWithFilePath:(id)arg1 loop:(_Bool)arg2 forRecord:(_Bool)arg3 volume:(float)arg4 delay:(double)arg5 duration:(double)arg6;
- (id)playAudioWithFilePath:(id)arg1 loop:(_Bool)arg2 forRecord:(_Bool)arg3 volume:(float)arg4 delay:(double)arg5;
- (id)playAudioWithFilePath:(id)arg1 loop:(_Bool)arg2 forRecord:(_Bool)arg3 volume:(float)arg4;
- (id)playAudioWithFilePath:(id)arg1 loop:(_Bool)arg2 forRecord:(_Bool)arg3;
- (void)resetAudioChannel;
- (void)resetSpeedValueToTimePitch:(_Bool)arg1;
- (void)stopPlayAllAudio;
- (void)muteAllPlayingAudioWithFade:(_Bool)arg1;
- (void)updatePlayingAudioVolume:(float)arg1 withAudioMoudle:(id)arg2;
- (void)updatePlayingAudioVolume:(float)arg1 withFilePath:(id)arg2;
- (void)removePlayAudioModule:(id)arg1;
- (id)playAudioWithNote:(id)arg1 withSampleDirPath:(id)arg2 cutPlayingAudio:(_Bool)arg3 cutWithFade:(_Bool)arg4 playVolumeFactor:(id)arg5 playTempo:(id)arg6;
- (id)playAudioWithNote:(id)arg1 withSampleType:(unsigned long long)arg2 withSubSampleType:(unsigned long long)arg3;
- (void)pause:(_Bool)arg1;
- (void)stopAndRemoveObservers:(_Bool)arg1;
- (void)stop;
@property(readonly, nonatomic) _Bool running;
- (_Bool)start:(id *)arg1 registerObservers:(_Bool)arg2;
- (_Bool)start:(id *)arg1;
- (void)dealloc;
- (id)init;

@end

